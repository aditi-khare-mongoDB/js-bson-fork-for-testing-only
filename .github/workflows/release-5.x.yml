on:
  push:
    branches: [5.x]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write
  id-token: write

name: release-5x

jobs:
  release_please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - id: release
        uses: google-github-actions/release-please-action@v4
        with:
          target-branch: 5.x
  
  compress-sign-and-upload:
    needs: [release_please]
    if: ${{ needs.release_please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: actions/setup
        uses: ./.github/actions/setup
      - run: npm pack
        shell: bash
      - name: Get release version and release package file name
        run: |
          PACKAGE_VERSION=$(jq --raw-output '.version' package.json)
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> "$GITHUB_OUTPUT"
          echo "PACKAGE_FILE=bson-${PACKAGE_VERSION}.tgz" >> "$GITHUB_OUTPUT"
      - name: Create detached signature
        uses: mongodb-labs/drivers-github-tools/garasign/gpg-sign@v1
        with:
          filenames: ${{ env.PACKAGE_FILE }}
          garasign_username: ${{ secrets.GRS_CONFIG_USER1_USERNAME }}
          garasign_password: ${{ secrets.GRS_CONFIG_USER1_PASSWORD }}
          artifactory_username: ${{ secrets.ARTIFACTORY_USER }}
          artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - if: false
        name: "Upload release artifacts"
        run: gh release upload v${{ env.PACKAGE_VERSION }} ${{ env.PACKAGE_FILE }}.sig
      - if: false
        run: npm publish --provenance --tag=5x
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
